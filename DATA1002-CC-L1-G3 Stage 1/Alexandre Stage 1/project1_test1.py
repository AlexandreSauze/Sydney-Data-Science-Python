# -*- coding: utf-8 -*-
"""Project1_test1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lFo9REkYbz53VOfLbXoTzkLKIUz44RWX
"""

import pandas as pd  # import panda functions
import numpy as np  # import statistic and math functions
data = pd.read_csv('Belarus Used Cars Prices.csv')  # import csv data into a Panda Data Frame
data

data.isna().sum()  # Check if there are any Nans in each column
data.isnull().sum()  # Check if there are any blank spaces in each column

#data = data.dropna(axis=0, how='any', thresh=None, subset=None, inplace=False)  # remove all the blank rows by using the data.dropna() function

UD = data[['make','model','priceUSD','year','mileage(kilometers)']]  # Filter the data by only keeping the columns we need
UD = UD.to_dict('records')  # Transform the Pandas Data Frame into a list where each entry is a dictionary for each row. The keys are the columns.

c = 0  # counter
tf = True
for row in UD:  # We then create a list for each column to facilitate data manipulation
  if tf:
    tf = False
    Brand = [row['make']]
    Model = [row['model']]
    Year = [row['year']]
    Price = [row['priceUSD']]
    Mileage = [row['mileage(kilometers)']]
  else:
    Brand.append(row['make'])
    Model.append(row['model'])
    Year.append(row['year'])
    Price.append(row['priceUSD'])
    Mileage.append(row['mileage(kilometers)'])
  c += 1
print('Biggest year:',max(Year))  # We then review the maxs and mins
print('Shortest year:',min(Year))
print('Most expensive:',max(Price))
print('Cheapest:',min(Price))

# Outlier identification function
def Outlier_IQR(info):
  info = sorted(info)
  outlier = []
  Q1 = len(info)//4-1
  Q2 = int(len(info)/2-1)
  Q3 = 3*len(info)//4-1
  Q4 = len(info)-1
  iQ1 = info[Q1]
  iQ2 = np.mean([info[Q2],info[Q2+1]])
  iQ3 = info[Q3]
  iQ4 = info[Q4]
  IQR = iQ3-iQ1
  #print(Q1,Q3,Q3-Q1-2,Q2)
  print("Q0:",info[0],"\nQ1:",iQ1,"\nQ2:",iQ2,"\nQ3:",iQ3,"\nQ4:",iQ4)
  lb = iQ1 - (1.5 * IQR)
  ub = iQ3 + (1.5 * IQR)

  print("Lower bound:",lb)
  print("Upper bound:", ub)
  
  for item in info:
    if item < lb or item > ub:
      outlier.append(item)
  print("There are",len(outlier),"outliers\n")
  return outlier

Price_Outliers = Outlier_IQR(Price)  #We save the price outliers in a list
Year_Outliers = Outlier_IQR(Year)  #We save the year outliers in a list
Mileage_Outliers = Outlier_IQR(Mileage)  #We save the Mileage outliers in a list

df = data[~data['priceUSD'].isin(Price_Outliers)]  #We now remove the rows with the values containing the outliers
df1 = df[~df['year'].isin(Year_Outliers)]
df2 = df1[~df1['mileage(kilometers)'].isin(Mileage_Outliers)]
df3 = df2[['make','model','priceUSD','year','mileage(kilometers)']]
df3.to_csv('Belarus Used Cars Prices_clean.csv')  #We now import our dataframe as a new csv file

print("Maximum Price:",max(df3['priceUSD']),"$","     Minimum Price:",min(df3['priceUSD']),"$")
print("Maximum Year:",max(df3['year']),"     Minimum Year:",min(df3['year']))
print("Maximum Mileage:",max(df3['mileage(kilometers)']),"km","     Minimum Mileage:",min(df3['mileage(kilometers)']),"km")
manu = {}
maker = df3['make']
for brand in maker:
  if brand not in manu:
    manu[brand] = 1
  else:
    manu[brand] += 1
for key in manu:
  print(key+":",manu[key])